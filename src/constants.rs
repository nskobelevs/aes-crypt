pub const SBOX: [u8; 256] = [
    0x63u8, 0x7cu8, 0x77u8, 0x7bu8, 0xf2u8, 0x6bu8, 0x6fu8, 0xc5u8, 0x30u8, 0x01u8, 0x67u8, 0x2bu8, 0xfeu8, 0xd7u8, 0xabu8, 0x76u8,
    0xcau8, 0x82u8, 0xc9u8, 0x7du8, 0xfau8, 0x59u8, 0x47u8, 0xf0u8, 0xadu8, 0xd4u8, 0xa2u8, 0xafu8, 0x9cu8, 0xa4u8, 0x72u8, 0xc0u8,
    0xb7u8, 0xfdu8, 0x93u8, 0x26u8, 0x36u8, 0x3fu8, 0xf7u8, 0xccu8, 0x34u8, 0xa5u8, 0xe5u8, 0xf1u8, 0x71u8, 0xd8u8, 0x31u8, 0x15u8,
    0x04u8, 0xc7u8, 0x23u8, 0xc3u8, 0x18u8, 0x96u8, 0x05u8, 0x9au8, 0x07u8, 0x12u8, 0x80u8, 0xe2u8, 0xebu8, 0x27u8, 0xb2u8, 0x75u8,
    0x09u8, 0x83u8, 0x2cu8, 0x1au8, 0x1bu8, 0x6eu8, 0x5au8, 0xa0u8, 0x52u8, 0x3bu8, 0xd6u8, 0xb3u8, 0x29u8, 0xe3u8, 0x2fu8, 0x84u8,
    0x53u8, 0xd1u8, 0x00u8, 0xedu8, 0x20u8, 0xfcu8, 0xb1u8, 0x5bu8, 0x6au8, 0xcbu8, 0xbeu8, 0x39u8, 0x4au8, 0x4cu8, 0x58u8, 0xcfu8,
    0xd0u8, 0xefu8, 0xaau8, 0xfbu8, 0x43u8, 0x4du8, 0x33u8, 0x85u8, 0x45u8, 0xf9u8, 0x02u8, 0x7fu8, 0x50u8, 0x3cu8, 0x9fu8, 0xa8u8,
    0x51u8, 0xa3u8, 0x40u8, 0x8fu8, 0x92u8, 0x9du8, 0x38u8, 0xf5u8, 0xbcu8, 0xb6u8, 0xdau8, 0x21u8, 0x10u8, 0xffu8, 0xf3u8, 0xd2u8,
    0xcdu8, 0x0cu8, 0x13u8, 0xecu8, 0x5fu8, 0x97u8, 0x44u8, 0x17u8, 0xc4u8, 0xa7u8, 0x7eu8, 0x3du8, 0x64u8, 0x5du8, 0x19u8, 0x73u8,
    0x60u8, 0x81u8, 0x4fu8, 0xdcu8, 0x22u8, 0x2au8, 0x90u8, 0x88u8, 0x46u8, 0xeeu8, 0xb8u8, 0x14u8, 0xdeu8, 0x5eu8, 0x0bu8, 0xdbu8,
    0xe0u8, 0x32u8, 0x3au8, 0x0au8, 0x49u8, 0x06u8, 0x24u8, 0x5cu8, 0xc2u8, 0xd3u8, 0xacu8, 0x62u8, 0x91u8, 0x95u8, 0xe4u8, 0x79u8,
    0xe7u8, 0xc8u8, 0x37u8, 0x6du8, 0x8du8, 0xd5u8, 0x4eu8, 0xa9u8, 0x6cu8, 0x56u8, 0xf4u8, 0xeau8, 0x65u8, 0x7au8, 0xaeu8, 0x08u8,
    0xbau8, 0x78u8, 0x25u8, 0x2eu8, 0x1cu8, 0xa6u8, 0xb4u8, 0xc6u8, 0xe8u8, 0xddu8, 0x74u8, 0x1fu8, 0x4bu8, 0xbdu8, 0x8bu8, 0x8au8,
    0x70u8, 0x3eu8, 0xb5u8, 0x66u8, 0x48u8, 0x03u8, 0xf6u8, 0x0eu8, 0x61u8, 0x35u8, 0x57u8, 0xb9u8, 0x86u8, 0xc1u8, 0x1du8, 0x9eu8,
    0xe1u8, 0xf8u8, 0x98u8, 0x11u8, 0x69u8, 0xd9u8, 0x8eu8, 0x94u8, 0x9bu8, 0x1eu8, 0x87u8, 0xe9u8, 0xceu8, 0x55u8, 0x28u8, 0xdfu8,
    0x8cu8, 0xa1u8, 0x89u8, 0x0du8, 0xbfu8, 0xe6u8, 0x42u8, 0x68u8, 0x41u8, 0x99u8, 0x2du8, 0x0fu8, 0xb0u8, 0x54u8, 0xbbu8, 0x16u8,
];

pub const INVERSE_SBOX: [u8; 256] = [
    0x52u8, 0x09u8, 0x6au8, 0xd5u8, 0x30u8, 0x36u8, 0xa5u8, 0x38u8, 0xbfu8, 0x40u8, 0xa3u8, 0x9eu8, 0x81u8, 0xf3u8, 0xd7u8, 0xfbu8,
    0x7cu8, 0xe3u8, 0x39u8, 0x82u8, 0x9bu8, 0x2fu8, 0xffu8, 0x87u8, 0x34u8, 0x8eu8, 0x43u8, 0x44u8, 0xc4u8, 0xdeu8, 0xe9u8, 0xcbu8,
    0x54u8, 0x7bu8, 0x94u8, 0x32u8, 0xa6u8, 0xc2u8, 0x23u8, 0x3du8, 0xeeu8, 0x4cu8, 0x95u8, 0x0bu8, 0x42u8, 0xfau8, 0xc3u8, 0x4eu8,
    0x08u8, 0x2eu8, 0xa1u8, 0x66u8, 0x28u8, 0xd9u8, 0x24u8, 0xb2u8, 0x76u8, 0x5bu8, 0xa2u8, 0x49u8, 0x6du8, 0x8bu8, 0xd1u8, 0x25u8,
    0x72u8, 0xf8u8, 0xf6u8, 0x64u8, 0x86u8, 0x68u8, 0x98u8, 0x16u8, 0xd4u8, 0xa4u8, 0x5cu8, 0xccu8, 0x5du8, 0x65u8, 0xb6u8, 0x92u8,
    0x6cu8, 0x70u8, 0x48u8, 0x50u8, 0xfdu8, 0xedu8, 0xb9u8, 0xdau8, 0x5eu8, 0x15u8, 0x46u8, 0x57u8, 0xa7u8, 0x8du8, 0x9du8, 0x84u8,
    0x90u8, 0xd8u8, 0xabu8, 0x00u8, 0x8cu8, 0xbcu8, 0xd3u8, 0x0au8, 0xf7u8, 0xe4u8, 0x58u8, 0x05u8, 0xb8u8, 0xb3u8, 0x45u8, 0x06u8,
    0xd0u8, 0x2cu8, 0x1eu8, 0x8fu8, 0xcau8, 0x3fu8, 0x0fu8, 0x02u8, 0xc1u8, 0xafu8, 0xbdu8, 0x03u8, 0x01u8, 0x13u8, 0x8au8, 0x6bu8,
    0x3au8, 0x91u8, 0x11u8, 0x41u8, 0x4fu8, 0x67u8, 0xdcu8, 0xeau8, 0x97u8, 0xf2u8, 0xcfu8, 0xceu8, 0xf0u8, 0xb4u8, 0xe6u8, 0x73u8,
    0x96u8, 0xacu8, 0x74u8, 0x22u8, 0xe7u8, 0xadu8, 0x35u8, 0x85u8, 0xe2u8, 0xf9u8, 0x37u8, 0xe8u8, 0x1cu8, 0x75u8, 0xdfu8, 0x6eu8,
    0x47u8, 0xf1u8, 0x1au8, 0x71u8, 0x1du8, 0x29u8, 0xc5u8, 0x89u8, 0x6fu8, 0xb7u8, 0x62u8, 0x0eu8, 0xaau8, 0x18u8, 0xbeu8, 0x1bu8,
    0xfcu8, 0x56u8, 0x3eu8, 0x4bu8, 0xc6u8, 0xd2u8, 0x79u8, 0x20u8, 0x9au8, 0xdbu8, 0xc0u8, 0xfeu8, 0x78u8, 0xcdu8, 0x5au8, 0xf4u8,
    0x1fu8, 0xddu8, 0xa8u8, 0x33u8, 0x88u8, 0x07u8, 0xc7u8, 0x31u8, 0xb1u8, 0x12u8, 0x10u8, 0x59u8, 0x27u8, 0x80u8, 0xecu8, 0x5fu8,
    0x60u8, 0x51u8, 0x7fu8, 0xa9u8, 0x19u8, 0xb5u8, 0x4au8, 0x0du8, 0x2du8, 0xe5u8, 0x7au8, 0x9fu8, 0x93u8, 0xc9u8, 0x9cu8, 0xefu8,
    0xa0u8, 0xe0u8, 0x3bu8, 0x4du8, 0xaeu8, 0x2au8, 0xf5u8, 0xb0u8, 0xc8u8, 0xebu8, 0xbbu8, 0x3cu8, 0x83u8, 0x53u8, 0x99u8, 0x61u8,
    0x17u8, 0x2bu8, 0x04u8, 0x7eu8, 0xbau8, 0x77u8, 0xd6u8, 0x26u8, 0xe1u8, 0x69u8, 0x14u8, 0x63u8, 0x55u8, 0x21u8, 0x0cu8, 0x7du8,
];

pub const RCON: [u32; 10] = [
    0x01000000, 0x02000000, 0x04000000, 0x08000000, 0x10000000,
    0x20000000, 0x40000000, 0x80000000, 0x1b000000, 0x36000000
];

pub const GMUL2: [u8; 256] = [
    0x00,0x02,0x04,0x06,0x08,0x0a,0x0c,0x0e,0x10,0x12,0x14,0x16,0x18,0x1a,0x1c,0x1e,
    0x20,0x22,0x24,0x26,0x28,0x2a,0x2c,0x2e,0x30,0x32,0x34,0x36,0x38,0x3a,0x3c,0x3e,
    0x40,0x42,0x44,0x46,0x48,0x4a,0x4c,0x4e,0x50,0x52,0x54,0x56,0x58,0x5a,0x5c,0x5e,
    0x60,0x62,0x64,0x66,0x68,0x6a,0x6c,0x6e,0x70,0x72,0x74,0x76,0x78,0x7a,0x7c,0x7e,
    0x80,0x82,0x84,0x86,0x88,0x8a,0x8c,0x8e,0x90,0x92,0x94,0x96,0x98,0x9a,0x9c,0x9e,
    0xa0,0xa2,0xa4,0xa6,0xa8,0xaa,0xac,0xae,0xb0,0xb2,0xb4,0xb6,0xb8,0xba,0xbc,0xbe,
    0xc0,0xc2,0xc4,0xc6,0xc8,0xca,0xcc,0xce,0xd0,0xd2,0xd4,0xd6,0xd8,0xda,0xdc,0xde,
    0xe0,0xe2,0xe4,0xe6,0xe8,0xea,0xec,0xee,0xf0,0xf2,0xf4,0xf6,0xf8,0xfa,0xfc,0xfe,
    0x1b,0x19,0x1f,0x1d,0x13,0x11,0x17,0x15,0x0b,0x09,0x0f,0x0d,0x03,0x01,0x07,0x05,
    0x3b,0x39,0x3f,0x3d,0x33,0x31,0x37,0x35,0x2b,0x29,0x2f,0x2d,0x23,0x21,0x27,0x25,
    0x5b,0x59,0x5f,0x5d,0x53,0x51,0x57,0x55,0x4b,0x49,0x4f,0x4d,0x43,0x41,0x47,0x45,
    0x7b,0x79,0x7f,0x7d,0x73,0x71,0x77,0x75,0x6b,0x69,0x6f,0x6d,0x63,0x61,0x67,0x65,
    0x9b,0x99,0x9f,0x9d,0x93,0x91,0x97,0x95,0x8b,0x89,0x8f,0x8d,0x83,0x81,0x87,0x85,
    0xbb,0xb9,0xbf,0xbd,0xb3,0xb1,0xb7,0xb5,0xab,0xa9,0xaf,0xad,0xa3,0xa1,0xa7,0xa5,
    0xdb,0xd9,0xdf,0xdd,0xd3,0xd1,0xd7,0xd5,0xcb,0xc9,0xcf,0xcd,0xc3,0xc1,0xc7,0xc5,
    0xfb,0xf9,0xff,0xfd,0xf3,0xf1,0xf7,0xf5,0xeb,0xe9,0xef,0xed,0xe3,0xe1,0xe7,0xe5,
];

pub const GMUL3: [u8; 256] = [
    0x00,0x03,0x06,0x05,0x0c,0x0f,0x0a,0x09,0x18,0x1b,0x1e,0x1d,0x14,0x17,0x12,0x11,
    0x30,0x33,0x36,0x35,0x3c,0x3f,0x3a,0x39,0x28,0x2b,0x2e,0x2d,0x24,0x27,0x22,0x21,
    0x60,0x63,0x66,0x65,0x6c,0x6f,0x6a,0x69,0x78,0x7b,0x7e,0x7d,0x74,0x77,0x72,0x71,
    0x50,0x53,0x56,0x55,0x5c,0x5f,0x5a,0x59,0x48,0x4b,0x4e,0x4d,0x44,0x47,0x42,0x41,
    0xc0,0xc3,0xc6,0xc5,0xcc,0xcf,0xca,0xc9,0xd8,0xdb,0xde,0xdd,0xd4,0xd7,0xd2,0xd1,
    0xf0,0xf3,0xf6,0xf5,0xfc,0xff,0xfa,0xf9,0xe8,0xeb,0xee,0xed,0xe4,0xe7,0xe2,0xe1,
    0xa0,0xa3,0xa6,0xa5,0xac,0xaf,0xaa,0xa9,0xb8,0xbb,0xbe,0xbd,0xb4,0xb7,0xb2,0xb1,
    0x90,0x93,0x96,0x95,0x9c,0x9f,0x9a,0x99,0x88,0x8b,0x8e,0x8d,0x84,0x87,0x82,0x81,
    0x9b,0x98,0x9d,0x9e,0x97,0x94,0x91,0x92,0x83,0x80,0x85,0x86,0x8f,0x8c,0x89,0x8a,
    0xab,0xa8,0xad,0xae,0xa7,0xa4,0xa1,0xa2,0xb3,0xb0,0xb5,0xb6,0xbf,0xbc,0xb9,0xba,
    0xfb,0xf8,0xfd,0xfe,0xf7,0xf4,0xf1,0xf2,0xe3,0xe0,0xe5,0xe6,0xef,0xec,0xe9,0xea,
    0xcb,0xc8,0xcd,0xce,0xc7,0xc4,0xc1,0xc2,0xd3,0xd0,0xd5,0xd6,0xdf,0xdc,0xd9,0xda,
    0x5b,0x58,0x5d,0x5e,0x57,0x54,0x51,0x52,0x43,0x40,0x45,0x46,0x4f,0x4c,0x49,0x4a,
    0x6b,0x68,0x6d,0x6e,0x67,0x64,0x61,0x62,0x73,0x70,0x75,0x76,0x7f,0x7c,0x79,0x7a,
    0x3b,0x38,0x3d,0x3e,0x37,0x34,0x31,0x32,0x23,0x20,0x25,0x26,0x2f,0x2c,0x29,0x2a,
    0x0b,0x08,0x0d,0x0e,0x07,0x04,0x01,0x02,0x13,0x10,0x15,0x16,0x1f,0x1c,0x19,0x1a,
];

pub const GMUL9: [u8; 256] = [
    0x00,0x09,0x12,0x1b,0x24,0x2d,0x36,0x3f,0x48,0x41,0x5a,0x53,0x6c,0x65,0x7e,0x77,
    0x90,0x99,0x82,0x8b,0xb4,0xbd,0xa6,0xaf,0xd8,0xd1,0xca,0xc3,0xfc,0xf5,0xee,0xe7,
    0x3b,0x32,0x29,0x20,0x1f,0x16,0x0d,0x04,0x73,0x7a,0x61,0x68,0x57,0x5e,0x45,0x4c,
    0xab,0xa2,0xb9,0xb0,0x8f,0x86,0x9d,0x94,0xe3,0xea,0xf1,0xf8,0xc7,0xce,0xd5,0xdc,
    0x76,0x7f,0x64,0x6d,0x52,0x5b,0x40,0x49,0x3e,0x37,0x2c,0x25,0x1a,0x13,0x08,0x01,
    0xe6,0xef,0xf4,0xfd,0xc2,0xcb,0xd0,0xd9,0xae,0xa7,0xbc,0xb5,0x8a,0x83,0x98,0x91,
    0x4d,0x44,0x5f,0x56,0x69,0x60,0x7b,0x72,0x05,0x0c,0x17,0x1e,0x21,0x28,0x33,0x3a,
    0xdd,0xd4,0xcf,0xc6,0xf9,0xf0,0xeb,0xe2,0x95,0x9c,0x87,0x8e,0xb1,0xb8,0xa3,0xaa,
    0xec,0xe5,0xfe,0xf7,0xc8,0xc1,0xda,0xd3,0xa4,0xad,0xb6,0xbf,0x80,0x89,0x92,0x9b,
    0x7c,0x75,0x6e,0x67,0x58,0x51,0x4a,0x43,0x34,0x3d,0x26,0x2f,0x10,0x19,0x02,0x0b,
    0xd7,0xde,0xc5,0xcc,0xf3,0xfa,0xe1,0xe8,0x9f,0x96,0x8d,0x84,0xbb,0xb2,0xa9,0xa0,
    0x47,0x4e,0x55,0x5c,0x63,0x6a,0x71,0x78,0x0f,0x06,0x1d,0x14,0x2b,0x22,0x39,0x30,
    0x9a,0x93,0x88,0x81,0xbe,0xb7,0xac,0xa5,0xd2,0xdb,0xc0,0xc9,0xf6,0xff,0xe4,0xed,
    0x0a,0x03,0x18,0x11,0x2e,0x27,0x3c,0x35,0x42,0x4b,0x50,0x59,0x66,0x6f,0x74,0x7d,
    0xa1,0xa8,0xb3,0xba,0x85,0x8c,0x97,0x9e,0xe9,0xe0,0xfb,0xf2,0xcd,0xc4,0xdf,0xd6,
    0x31,0x38,0x23,0x2a,0x15,0x1c,0x07,0x0e,0x79,0x70,0x6b,0x62,0x5d,0x54,0x4f,0x46,
];

pub const GMUL11: [u8; 256] = [
    0x00,0x0b,0x16,0x1d,0x2c,0x27,0x3a,0x31,0x58,0x53,0x4e,0x45,0x74,0x7f,0x62,0x69,
    0xb0,0xbb,0xa6,0xad,0x9c,0x97,0x8a,0x81,0xe8,0xe3,0xfe,0xf5,0xc4,0xcf,0xd2,0xd9,
    0x7b,0x70,0x6d,0x66,0x57,0x5c,0x41,0x4a,0x23,0x28,0x35,0x3e,0x0f,0x04,0x19,0x12,
    0xcb,0xc0,0xdd,0xd6,0xe7,0xec,0xf1,0xfa,0x93,0x98,0x85,0x8e,0xbf,0xb4,0xa9,0xa2,
    0xf6,0xfd,0xe0,0xeb,0xda,0xd1,0xcc,0xc7,0xae,0xa5,0xb8,0xb3,0x82,0x89,0x94,0x9f,
    0x46,0x4d,0x50,0x5b,0x6a,0x61,0x7c,0x77,0x1e,0x15,0x08,0x03,0x32,0x39,0x24,0x2f,
    0x8d,0x86,0x9b,0x90,0xa1,0xaa,0xb7,0xbc,0xd5,0xde,0xc3,0xc8,0xf9,0xf2,0xef,0xe4,
    0x3d,0x36,0x2b,0x20,0x11,0x1a,0x07,0x0c,0x65,0x6e,0x73,0x78,0x49,0x42,0x5f,0x54,
    0xf7,0xfc,0xe1,0xea,0xdb,0xd0,0xcd,0xc6,0xaf,0xa4,0xb9,0xb2,0x83,0x88,0x95,0x9e,
    0x47,0x4c,0x51,0x5a,0x6b,0x60,0x7d,0x76,0x1f,0x14,0x09,0x02,0x33,0x38,0x25,0x2e,
    0x8c,0x87,0x9a,0x91,0xa0,0xab,0xb6,0xbd,0xd4,0xdf,0xc2,0xc9,0xf8,0xf3,0xee,0xe5,
    0x3c,0x37,0x2a,0x21,0x10,0x1b,0x06,0x0d,0x64,0x6f,0x72,0x79,0x48,0x43,0x5e,0x55,
    0x01,0x0a,0x17,0x1c,0x2d,0x26,0x3b,0x30,0x59,0x52,0x4f,0x44,0x75,0x7e,0x63,0x68,
    0xb1,0xba,0xa7,0xac,0x9d,0x96,0x8b,0x80,0xe9,0xe2,0xff,0xf4,0xc5,0xce,0xd3,0xd8,
    0x7a,0x71,0x6c,0x67,0x56,0x5d,0x40,0x4b,0x22,0x29,0x34,0x3f,0x0e,0x05,0x18,0x13,
    0xca,0xc1,0xdc,0xd7,0xe6,0xed,0xf0,0xfb,0x92,0x99,0x84,0x8f,0xbe,0xb5,0xa8,0xa3,
];

pub const GMUL13: [u8; 256] = [
    0x00,0x0d,0x1a,0x17,0x34,0x39,0x2e,0x23,0x68,0x65,0x72,0x7f,0x5c,0x51,0x46,0x4b,
    0xd0,0xdd,0xca,0xc7,0xe4,0xe9,0xfe,0xf3,0xb8,0xb5,0xa2,0xaf,0x8c,0x81,0x96,0x9b,
    0xbb,0xb6,0xa1,0xac,0x8f,0x82,0x95,0x98,0xd3,0xde,0xc9,0xc4,0xe7,0xea,0xfd,0xf0,
    0x6b,0x66,0x71,0x7c,0x5f,0x52,0x45,0x48,0x03,0x0e,0x19,0x14,0x37,0x3a,0x2d,0x20,
    0x6d,0x60,0x77,0x7a,0x59,0x54,0x43,0x4e,0x05,0x08,0x1f,0x12,0x31,0x3c,0x2b,0x26,
    0xbd,0xb0,0xa7,0xaa,0x89,0x84,0x93,0x9e,0xd5,0xd8,0xcf,0xc2,0xe1,0xec,0xfb,0xf6,
    0xd6,0xdb,0xcc,0xc1,0xe2,0xef,0xf8,0xf5,0xbe,0xb3,0xa4,0xa9,0x8a,0x87,0x90,0x9d,
    0x06,0x0b,0x1c,0x11,0x32,0x3f,0x28,0x25,0x6e,0x63,0x74,0x79,0x5a,0x57,0x40,0x4d,
    0xda,0xd7,0xc0,0xcd,0xee,0xe3,0xf4,0xf9,0xb2,0xbf,0xa8,0xa5,0x86,0x8b,0x9c,0x91,
    0x0a,0x07,0x10,0x1d,0x3e,0x33,0x24,0x29,0x62,0x6f,0x78,0x75,0x56,0x5b,0x4c,0x41,
    0x61,0x6c,0x7b,0x76,0x55,0x58,0x4f,0x42,0x09,0x04,0x13,0x1e,0x3d,0x30,0x27,0x2a,
    0xb1,0xbc,0xab,0xa6,0x85,0x88,0x9f,0x92,0xd9,0xd4,0xc3,0xce,0xed,0xe0,0xf7,0xfa,
    0xb7,0xba,0xad,0xa0,0x83,0x8e,0x99,0x94,0xdf,0xd2,0xc5,0xc8,0xeb,0xe6,0xf1,0xfc,
    0x67,0x6a,0x7d,0x70,0x53,0x5e,0x49,0x44,0x0f,0x02,0x15,0x18,0x3b,0x36,0x21,0x2c,
    0x0c,0x01,0x16,0x1b,0x38,0x35,0x22,0x2f,0x64,0x69,0x7e,0x73,0x50,0x5d,0x4a,0x47,
    0xdc,0xd1,0xc6,0xcb,0xe8,0xe5,0xf2,0xff,0xb4,0xb9,0xae,0xa3,0x80,0x8d,0x9a,0x97,
];

pub const GMUL14: [u8; 256] = [
    0x00,0x0e,0x1c,0x12,0x38,0x36,0x24,0x2a,0x70,0x7e,0x6c,0x62,0x48,0x46,0x54,0x5a,
    0xe0,0xee,0xfc,0xf2,0xd8,0xd6,0xc4,0xca,0x90,0x9e,0x8c,0x82,0xa8,0xa6,0xb4,0xba,
    0xdb,0xd5,0xc7,0xc9,0xe3,0xed,0xff,0xf1,0xab,0xa5,0xb7,0xb9,0x93,0x9d,0x8f,0x81,
    0x3b,0x35,0x27,0x29,0x03,0x0d,0x1f,0x11,0x4b,0x45,0x57,0x59,0x73,0x7d,0x6f,0x61,
    0xad,0xa3,0xb1,0xbf,0x95,0x9b,0x89,0x87,0xdd,0xd3,0xc1,0xcf,0xe5,0xeb,0xf9,0xf7,
    0x4d,0x43,0x51,0x5f,0x75,0x7b,0x69,0x67,0x3d,0x33,0x21,0x2f,0x05,0x0b,0x19,0x17,
    0x76,0x78,0x6a,0x64,0x4e,0x40,0x52,0x5c,0x06,0x08,0x1a,0x14,0x3e,0x30,0x22,0x2c,
    0x96,0x98,0x8a,0x84,0xae,0xa0,0xb2,0xbc,0xe6,0xe8,0xfa,0xf4,0xde,0xd0,0xc2,0xcc,
    0x41,0x4f,0x5d,0x53,0x79,0x77,0x65,0x6b,0x31,0x3f,0x2d,0x23,0x09,0x07,0x15,0x1b,
    0xa1,0xaf,0xbd,0xb3,0x99,0x97,0x85,0x8b,0xd1,0xdf,0xcd,0xc3,0xe9,0xe7,0xf5,0xfb,
    0x9a,0x94,0x86,0x88,0xa2,0xac,0xbe,0xb0,0xea,0xe4,0xf6,0xf8,0xd2,0xdc,0xce,0xc0,
    0x7a,0x74,0x66,0x68,0x42,0x4c,0x5e,0x50,0x0a,0x04,0x16,0x18,0x32,0x3c,0x2e,0x20,
    0xec,0xe2,0xf0,0xfe,0xd4,0xda,0xc8,0xc6,0x9c,0x92,0x80,0x8e,0xa4,0xaa,0xb8,0xb6,
    0x0c,0x02,0x10,0x1e,0x34,0x3a,0x28,0x26,0x7c,0x72,0x60,0x6e,0x44,0x4a,0x58,0x56,
    0x37,0x39,0x2b,0x25,0x0f,0x01,0x13,0x1d,0x47,0x49,0x5b,0x55,0x7f,0x71,0x63,0x6d,
    0xd7,0xd9,0xcb,0xc5,0xef,0xe1,0xf3,0xfd,0xa7,0xa9,0xbb,0xb5,0x9f,0x91,0x83,0x8d,
];

/// Puts a value through the Rijndael S-box
#[inline(always)]
pub const fn sbox(value: u8) -> u8 {
    SBOX[value as usize]
}

/// Puts a value through the inverse Rijndael S-box
#[inline(always)]
pub const fn inverse_sbox(value: u8) -> u8 {
    INVERSE_SBOX[value as usize]
}

/// Returns the round constant for the round i of key-expansion
///
/// panics if i is out of bounds 1..=10
#[inline(always)]
pub const fn rcon(i: u8) -> u32 {
    RCON[(i - 1) as usize]
}

#[cfg(test)]
mod tests {
    use assert_hex::assert_eq_hex;

    use super::*;

    #[test]
    pub fn test_sbox() {
        for value in 0..=255u8 {
            assert_eq_hex!(value, inverse_sbox(sbox(value)), "expected inverse_sbox(sbox({0:#04x})) == {0:#04x}", value);
        }
    }
}
